# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-28 14:29
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agronomic_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=b'GAH1_Agronomic_Information', max_length=200)),
                ('trial', models.CharField(default=b'GAH1', max_length=20, null=True)),
                ('recordID', models.IntegerField(default=1, null=True)),
                ('application_or_treatment', models.CharField(max_length=200, null=True)),
                ('product_or_nutrient_applied', models.CharField(max_length=200, null=True)),
                ('date_of_application', models.CharField(max_length=50, null=True)),
                ('quantity_per_acre', models.CharField(max_length=200, null=True)),
                ('application_unit', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Json_path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json_path', models.CharField(default=b'/Users/yiweisun/Downloads/GoogleSheetTest-d112a30fe1a8.json', max_length=200)),
                ('trial_year', models.IntegerField(default=2016)),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet_id', models.CharField(default=b'1ZPIYJtaPNIEpT_rvvR3WfKvXYx1_p2vZtHycCPUUaJg', max_length=100, unique=True)),
                ('title', models.CharField(default=b'gah1_metadata_2016', max_length=100)),
                ('trial_year', models.IntegerField(default=2016)),
                ('date_import', models.DateField(default=datetime.date.today)),
                ('trial', models.CharField(max_length=100)),
                ('treatment', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('farm', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=100)),
                ('trial_ID', models.CharField(max_length=100)),
                ('soil', models.CharField(max_length=100)),
                ('stationID', models.CharField(max_length=100)),
                ('lat', models.CharField(max_length=100)),
                ('long', models.CharField(max_length=100)),
                ('stn_in', models.CharField(max_length=20)),
                ('stn_out', models.CharField(max_length=20)),
                ('prev_crop', models.CharField(max_length=100)),
                ('tillage', models.CharField(max_length=100)),
                ('season_tillage', models.CharField(max_length=100)),
                ('plot_len', models.CharField(max_length=100)),
                ('alley_Len', models.CharField(max_length=100)),
                ('row_Spacing', models.CharField(max_length=100)),
                ('planter', models.CharField(max_length=100)),
                ('kernels_per_Plot', models.CharField(max_length=100)),
                ('grain_moisture', models.CharField(max_length=100)),
                ('sample_Size', models.CharField(max_length=100)),
                ('LL_lat', models.CharField(max_length=100)),
                ('LL_long', models.CharField(max_length=100)),
                ('LR_lat', models.CharField(max_length=100)),
                ('LR_long', models.CharField(max_length=100)),
                ('UR_lat', models.CharField(max_length=100)),
                ('UR_long', models.CharField(max_length=100)),
                ('UL_lat', models.CharField(max_length=100)),
                ('UL_long', models.CharField(max_length=100)),
                ('cardinal', models.CharField(max_length=100)),
                ('chk1_ped', models.CharField(max_length=100)),
                ('chk1_src', models.CharField(max_length=100)),
                ('chk2_ped', models.CharField(max_length=100)),
                ('chk2_src', models.CharField(max_length=100)),
                ('chk3_ped', models.CharField(max_length=100)),
                ('chk3_src', models.CharField(max_length=100)),
                ('chk4_ped', models.CharField(max_length=100)),
                ('chk4_src', models.CharField(max_length=100)),
                ('chk5_ped', models.CharField(max_length=100)),
                ('chk5_src', models.CharField(max_length=100)),
                ('note1', models.TextField()),
                ('note2', models.TextField()),
                ('note3', models.TextField()),
                ('note4', models.TextField()),
                ('note5', models.TextField()),
                ('note6', models.TextField()),
                ('note7', models.TextField()),
                ('note8', models.TextField()),
                ('note9', models.TextField()),
                ('note10', models.TextField()),
                ('note11', models.TextField()),
                ('note12', models.TextField()),
                ('note13', models.TextField()),
                ('note14', models.TextField()),
                ('note15', models.TextField()),
                ('note16', models.TextField()),
                ('note17', models.TextField()),
                ('note18', models.TextField()),
                ('note19', models.TextField()),
                ('note20', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Sheet_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('sheet_id', models.CharField(max_length=100, unique=True)),
                ('json_path_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='googleSheetIntoDB.Json_path')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='json_path',
            unique_together=set([('json_path', 'trial_year')]),
        ),
    ]
